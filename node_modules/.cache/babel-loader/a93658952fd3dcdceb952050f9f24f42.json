{"ast":null,"code":"var _jsxFileName = \"D:\\\\dolar_react-master\\\\dolar_react-master\\\\src\\\\components\\\\HomePage\\\\StockIndex\\\\StockIndex.js\";\nimport React from 'react';\nimport bvcLogo from '../../../assets/img/logo-nuevo-bvc-w.png';\nimport classes from './StockIndex.css';\nimport Chart from \"chart.js\";\n\nclass StockIndex extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: ['panel', \"panel-info\"].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: [\"panel-heading\"].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: [\"panel-title\", classes.Inline].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"\\xCDndices accionarios\"), React.createElement(\"img\", {\n      src: bvcLogo,\n      className: [\"pull-right\", classes.BVCLogo].join(' '),\n      alt: \"bvc-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: [\"panel-body\", classes.StockPanelBody].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: [\"table table-stripped\", classes.StockTable].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Valor\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Valoraci\\xF3n %\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.table && this.props.table.map((row, index) => React.createElement(\"tr\", {\n      key: \"stock-row-\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, row.map((cell, jindex) => React.createElement(\"td\", {\n      key: \"stock-row-cell-\".concat(index).concat(jindex),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, cell)))))), React.createElement(\"canvas\", {\n      id: \"StockIndex\",\n      className: classes.StockChart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n  componentDidUpdate() {\n    if (this.props.chart) {\n      const labels = this.props.chart.map(elem => elem[0]);\n      const values = this.props.chart.map(elem => elem[1]);\n      let ctx = document.getElementById(\"StockIndex\").getContext(\"2d\");\n      const config = {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            data: values,\n            backgroundColor: \"rgba(0,0,0,0)\",\n            pointRadius: 0,\n            borderColor: \"#8bc34a\"\n          }]\n        },\n        options: {\n          responsive: true,\n          animation: false,\n          maintainAspectRatio: true,\n          line: {\n            tension: 0 // disables bezier curves\n\n          },\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              scaleLabel: {\n                display: false\n              },\n              ticks: {\n                maxRotation: 90,\n                minRotation: 90\n              }\n            }]\n          }\n        }\n      };\n      this.chart = new Chart(ctx, config);\n    }\n  }\n\n}\n\nexport default StockIndex;","map":{"version":3,"sources":["D:\\dolar_react-master\\dolar_react-master\\src\\components\\HomePage\\StockIndex\\StockIndex.js"],"names":["React","bvcLogo","classes","Chart","StockIndex","Component","render","join","Inline","BVCLogo","StockPanelBody","StockTable","props","table","map","row","index","cell","jindex","StockChart","componentDidUpdate","chart","labels","elem","values","ctx","document","getElementById","getContext","config","type","data","datasets","backgroundColor","pointRadius","borderColor","options","responsive","animation","maintainAspectRatio","line","tension","legend","display","scales","xAxes","scaleLabel","ticks","maxRotation","minRotation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport bvcLogo from '../../../assets/img/logo-nuevo-bvc-w.png'\nimport classes from './StockIndex.css'\nimport Chart from \"chart.js\";\nclass StockIndex extends React.Component{\n    render(){\n        return(\n            <div className={['panel', \"panel-info\"].join(' ')}>\n                <div className={[\"panel-heading\"].join(' ')}>\n                    <h3 className={[\"panel-title\", classes.Inline].join(' ')}>\n                        Índices accionarios\n                    </h3>\n                    <img src={bvcLogo} className={[\"pull-right\", classes.BVCLogo].join(' ')} alt=\"bvc-logo\"/>\n                </div>\n                <div className={[\"panel-body\", classes.StockPanelBody].join(' ')}>\n                    <table className={[\"table table-stripped\", classes.StockTable].join(' ')}>\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>Valor</th>\n                                <th>Valoración %</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.props.table && this.props.table.map((row, index) => (\n                                <tr key={`stock-row-${index}`}>\n                                    {row.map((cell,jindex) => (\n                                        <td key={`stock-row-cell-${index}${jindex}`}>{cell}</td>\n                                    ))}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                    <canvas id=\"StockIndex\" className={classes.StockChart}></canvas>\n                </div>\n            </div>\n        )\n    }\n\n    componentDidUpdate(){\n        if(this.props.chart){\n            const labels = this.props.chart.map(elem => elem[0]);\n            const values = this.props.chart.map(elem => elem[1]);\n            let ctx = document.getElementById(\"StockIndex\").getContext(\"2d\");\n            const config = {\n                type: 'line',\n                data: {\n                    labels: labels,\n                    datasets:[{\n                        data: values,\n                        backgroundColor: \"rgba(0,0,0,0)\",\n                        pointRadius: 0,\n                        borderColor: \"#8bc34a\",\n                    }]\n                },\n                options:{\n                    responsive: true,\n                    animation: false,\n                    maintainAspectRatio: true,\n                    line: {\n                        tension: 0 // disables bezier curves\n                    },\n                    legend: {\n                        display: false\n                    },\n                    scales: {\n                        xAxes: [{\n                            scaleLabel: {\n                                display: false,\n                            },\n                            ticks: {\n                                maxRotation: 90,\n                                minRotation: 90\n                            }\n                        }]\n                    }\n                }\n            }\n            this.chart = new Chart(ctx, config);\n        }\n    }\n}\n\nexport default StockIndex;"]},"metadata":{},"sourceType":"module"}