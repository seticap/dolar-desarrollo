{"ast":null,"code":"import _objectSpread from \"D:\\\\dolar_react-master\\\\dolar_react-master2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\dolar_react-master\\\\dolar_react-master2\\\\src\\\\containers\\\\Dashboard\\\\Statistics.js\";\nimport React, { Component } from 'react';\nimport { Http, HttpNode } from '../../axiosInstances';\n\nconst strip_html_tags = (str, rep = \"\") => {\n  if (str === null || str === '') return false;else str = str.toString();\n  return str.replace(/(<([^>]+)>)/ig, rep);\n};\n\nconst HEADERS = [\"Merc.\", \"Moneda\", \"Plazo\", \"Monto Acumulado\", \"Apertura\", \"Cierre\", \"No Trans.\", \"Promedio\", \"Precio mínimo\", \"Precio máximo\", \"Monto promedio\", \"Monto mínimo\", \"Monto máximo\", \"Monto último\", \"Fecha\"];\nconst PRICEHEADERS = [\"Monto Acumulado\", \"Apertura\", \"Cierre\", \"Promedio\", \"Precio mínimo\", \"Precio máximo\", \"Monto promedio\", \"Monto mínimo\", \"Monto máximo\", \"Monto último\"];\n\nclass StatisticsComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sectorInfo: [],\n      realInfo: []\n    };\n  }\n\n  mapTable(response) {\n    const parser = new DOMParser();\n    let parserTable = parser.parseFromString(response.data, \"text/html\");\n    const sectorInfoTitles = Array.from(parserTable.querySelectorAll(\".sectores_header > tbody > tr > th\")).map(cell => strip_html_tags(cell.innerHTML, ' '));\n    const sectorInfo = Array.from(parserTable.querySelectorAll('.sectores > tbody > tr')).map(row => Array.from(row.querySelectorAll('td')).map(cell => strip_html_tags(cell.innerHTML, ' ')));\n    return {\n      titles: sectorInfoTitles,\n      info: sectorInfo\n    };\n  }\n\n  componentDidMount() {\n    HttpNode.post('seticap/api/estadisticas/estadisticasMercado', {\n      \"moneda\": \"USD/COP\",\n      \"sector\": 1\n    }).then(response => {\n      let info = [];\n      response.data.result.map(obj => {\n        let row = [];\n        HEADERS.map(key => {\n          if (PRICEHEADERS.indexOf(key) != -1) {\n            row.push(new Intl.NumberFormat('es-CO', {\n              style: \"currency\",\n              currency: \"COP\"\n            }).format(parseFloat(obj[key]).toFixed(2)));\n          } else {\n            row.push(obj[key]);\n          }\n        });\n        info.push(row);\n      });\n      this.setState(_objectSpread({}, this.state, {\n        sectorInfo: info\n      }));\n    });\n    HttpNode.post('seticap/api/estadisticas/estadisticasMercado', {\n      \"sector\": 2\n    }).then(response => {\n      let info = [];\n      response.data.result.map(obj => {\n        let row = [];\n        HEADERS.map(key => {\n          if (PRICEHEADERS.indexOf(key) != -1) {\n            row.push(new Intl.NumberFormat('es-CO', {\n              style: \"currency\",\n              currency: \"COP\"\n            }).format(parseFloat(obj[key]).toFixed(2)));\n          } else {\n            row.push(obj[key]);\n          }\n        });\n        info.push(row);\n      });\n      this.setState(_objectSpread({}, this.state, {\n        realInfo: info\n      }));\n    });\n  }\n\n  render() {\n    const paddingTop = this.props.paddingTop ? this.props.paddingTop : '0';\n    return React.createElement(\"div\", {\n      id: \"content-container\",\n      style: {\n        paddingTop: \"\".concat(paddingTop, \"%\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"page-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"badge badge-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"IMCs / IMCs\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      style: {\n        backgroundColor: 'white',\n        overflowX: 'scroll'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, HEADERS.map(title => React.createElement(\"th\", {\n      key: \"icms-\".concat(title),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, title)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.sectorInfo.map((row, i) => React.createElement(\"tr\", {\n      key: \"srow-\".concat(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, row.map((cell, j) => React.createElement(\"td\", {\n      key: \"scell-\".concat(i).concat(j),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, cell)))))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"badge badge-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"IMCs / Clientes\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      style: {\n        backgroundColor: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, HEADERS.map(title => React.createElement(\"th\", {\n      key: \"real-\".concat(title),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, title)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.realInfo.map((row, i) => React.createElement(\"tr\", {\n      key: \"rrow-\".concat(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, row.map((cell, j) => React.createElement(\"td\", {\n      key: \"rcell-\".concat(i).concat(j),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, cell)))))))))));\n  }\n\n}\n\nexport default StatisticsComponent;","map":{"version":3,"sources":["D:\\dolar_react-master\\dolar_react-master2\\src\\containers\\Dashboard\\Statistics.js"],"names":["React","Component","Http","HttpNode","strip_html_tags","str","rep","toString","replace","HEADERS","PRICEHEADERS","StatisticsComponent","state","sectorInfo","realInfo","mapTable","response","parser","DOMParser","parserTable","parseFromString","data","sectorInfoTitles","Array","from","querySelectorAll","map","cell","innerHTML","row","titles","info","componentDidMount","post","then","result","obj","key","indexOf","push","Intl","NumberFormat","style","currency","format","parseFloat","toFixed","setState","render","paddingTop","props","backgroundColor","overflowX","title","i","j"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Http, HttpNode } from '../../axiosInstances';\n\nconst strip_html_tags = (str, rep = \"\") => {\n    if ((str === null) || (str === ''))\n        return false;\n    else\n        str = str.toString();\n    return str.replace(/(<([^>]+)>)/ig, rep);\n}\n\nconst HEADERS = [\"Merc.\", \"Moneda\", \"Plazo\", \"Monto Acumulado\", \"Apertura\", \"Cierre\", \"No Trans.\",\n    \"Promedio\", \"Precio mínimo\", \"Precio máximo\", \"Monto promedio\", \"Monto mínimo\", \"Monto máximo\",\n    \"Monto último\", \"Fecha\"]\n\nconst PRICEHEADERS = [\"Monto Acumulado\", \"Apertura\", \"Cierre\", \"Promedio\", \"Precio mínimo\",\n    \"Precio máximo\", \"Monto promedio\", \"Monto mínimo\", \"Monto máximo\", \"Monto último\"]\n\nclass StatisticsComponent extends Component {\n    state = {\n        sectorInfo: [],\n        realInfo: []\n    }\n\n    mapTable(response) {\n        const parser = new DOMParser();\n        let parserTable = parser.parseFromString(response.data, \"text/html\");\n        const sectorInfoTitles = Array.from(parserTable.querySelectorAll(\".sectores_header > tbody > tr > th\")).map(\n            cell => strip_html_tags(cell.innerHTML, ' '));\n\n        const sectorInfo = Array.from(parserTable.querySelectorAll('.sectores > tbody > tr')).map(\n            row => Array.from(row.querySelectorAll('td')).map(\n                cell => strip_html_tags(cell.innerHTML, ' ')\n            )\n        );\n        return {\n            titles: sectorInfoTitles,\n            info: sectorInfo\n        }\n    }\n\n    componentDidMount() {\n        HttpNode.post('seticap/api/estadisticas/estadisticasMercado', { \"moneda\": \"USD/COP\", \"sector\": 1 }).then(\n            response => {\n                let info = []\n                response.data.result.map(obj => {\n                    let row = []\n                    HEADERS.map(key => {\n                        if (PRICEHEADERS.indexOf(key) != -1) {\n                            row.push(new Intl.NumberFormat('es-CO', { style: \"currency\", currency: \"COP\" }).format(parseFloat(obj[key]).toFixed(2)));\n                        } else {\n                            row.push(obj[key]);\n                        }\n                    })\n                    info.push(row);\n                })\n                this.setState({\n                    ...this.state,\n                    sectorInfo: info\n                })\n            }\n        )\n\n        HttpNode.post('seticap/api/estadisticas/estadisticasMercado', { \"sector\": 2 }).then(\n            response => {\n                let info = []\n                response.data.result.map(obj => {\n                    let row = []\n                    HEADERS.map(key => {\n                        if (PRICEHEADERS.indexOf(key) != -1) {\n                            row.push(new Intl.NumberFormat('es-CO', { style: \"currency\", currency: \"COP\" }).format(parseFloat(obj[key]).toFixed(2)));\n                        } else {\n                            row.push(obj[key]);\n                        }\n                    })\n                    info.push(row);\n                })\n                this.setState({\n                    ...this.state,\n                    realInfo: info\n                })\n            }\n        )\n\n    }\n\n    render() {\n        const paddingTop = this.props.paddingTop ? this.props.paddingTop : '0'\n        return (\n            <div id=\"content-container\" style={{paddingTop: `${paddingTop}%`}}>\n                <div id=\"page-content\">\n                    <div>\n                        <div className=\"row\">\n                            <h4><span className=\"badge badge-warning\">IMCs / IMCs</span></h4>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12\" style={{ backgroundColor: 'white', overflowX: 'scroll' }}>\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            {HEADERS.map(title => <th key={`icms-${title}`}>{title}</th>)}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.state.sectorInfo.map((row, i) => <tr key={`srow-${i}`}>{row.map((cell, j) => <td key={`scell-${i}${j}`} >{cell}</td>)}</tr>)}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <h4><span className=\"badge badge-warning\">IMCs / Clientes</span></h4>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12\" style={{ backgroundColor: 'white' }}>\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            {HEADERS.map(title => <th key={`real-${title}`}>{title}</th>)}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.state.realInfo.map((row, i) => <tr key={`rrow-${i}`}>{row.map((cell, j) => <td key={`rcell-${i}${j}`} >{cell}</td>)}</tr>)}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default StatisticsComponent;"]},"metadata":{},"sourceType":"module"}