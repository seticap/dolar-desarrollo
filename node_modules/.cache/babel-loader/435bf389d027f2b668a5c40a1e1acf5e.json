{"ast":null,"code":"var _jsxFileName = \"D:\\\\dolar_react-master\\\\dolar_react-master2\\\\src\\\\components\\\\Nifty\\\\UI\\\\Input\\\\Input.js\";\nimport React from 'react';\n\nconst input = props => {\n  const INPUT_TYPES = ['text', 'email', 'number', 'password'];\n  let formElement = null;\n\n  if (INPUT_TYPES.lastIndexOf(props.config.type) !== -1) {\n    formElement = React.createElement(\"input\", {\n      type: props.config.type,\n      className: ['form-control'].join(' '),\n      onChange: props.change,\n      placeholder: props.config.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n\n  if (props.config.type === 'select') {\n    const options = props.config.options.map(opt => {\n      let key = Object.keys(opt)[0];\n      let value = opt[key];\n      return React.createElement(\"option\", {\n        key: key,\n        value: key,\n        selected: value === key ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, value);\n    });\n    formElement = React.createElement(\"select\", {\n      className: ['form-control'].join(' '),\n      onChange: props.change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, options);\n  }\n\n  if (props.config.type === 'textarea') {\n    formElement = React.createElement(\"textarea\", {\n      className: ['form-control'].join(' '),\n      onChange: props.change,\n      value: props.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, formElement);\n};\n\nexport default input;","map":{"version":3,"sources":["D:\\dolar_react-master\\dolar_react-master2\\src\\components\\Nifty\\UI\\Input\\Input.js"],"names":["React","input","props","INPUT_TYPES","formElement","lastIndexOf","config","type","join","change","placeholder","options","map","opt","key","Object","keys","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,WAAW,GAAG,CAChB,MADgB,EAEhB,OAFgB,EAGhB,QAHgB,EAIhB,UAJgB,CAApB;AAOA,MAAIC,WAAW,GAAG,IAAlB;;AAEA,MAAGD,WAAW,CAACE,WAAZ,CAAwBH,KAAK,CAACI,MAAN,CAAaC,IAArC,MAA+C,CAAC,CAAnD,EAAqD;AACjDH,IAAAA,WAAW,GAAG;AACE,MAAA,IAAI,EAAEF,KAAK,CAACI,MAAN,CAAaC,IADrB;AAEE,MAAA,SAAS,EAAE,CAAC,cAAD,EAAiBC,IAAjB,CAAsB,GAAtB,CAFb;AAGE,MAAA,QAAQ,EAAEN,KAAK,CAACO,MAHlB;AAIE,MAAA,WAAW,EAAEP,KAAK,CAACI,MAAN,CAAaI,WAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAKH;;AAED,MAAGR,KAAK,CAACI,MAAN,CAAaC,IAAb,KAAsB,QAAzB,EAAkC;AAE9B,UAAMI,OAAO,GAAGT,KAAK,CAACI,MAAN,CAAaK,OAAb,CAAqBC,GAArB,CAA0BC,GAAD,IAAS;AAC9C,UAAIC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiB,CAAjB,CAAV;AACA,UAAII,KAAK,GAAGJ,GAAG,CAACC,GAAD,CAAf;AACA,aAAO;AAAQ,QAAA,GAAG,EAAEA,GAAb;AAAkB,QAAA,KAAK,EAAEA,GAAzB;AAA8B,QAAA,QAAQ,EAAGG,KAAK,KAAGH,GAAR,GAAc,IAAd,GAAqB,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuEG,KAAvE,CAAP;AACH,KAJe,CAAhB;AAMAb,IAAAA,WAAW,GAAG;AACV,MAAA,SAAS,EAAE,CAAC,cAAD,EAAiBI,IAAjB,CAAsB,GAAtB,CADD;AAEV,MAAA,QAAQ,EAAEN,KAAK,CAACO,MAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGTE,OAHS,CAAd;AAKH;;AAED,MAAGT,KAAK,CAACI,MAAN,CAAaC,IAAb,KAAsB,UAAzB,EAAoC;AAChCH,IAAAA,WAAW,GAAG;AAAU,MAAA,SAAS,EAAE,CAAC,cAAD,EAAiBI,IAAjB,CAAsB,GAAtB,CAArB;AACV,MAAA,QAAQ,EAAEN,KAAK,CAACO,MADN;AACc,MAAA,KAAK,EAAEP,KAAK,CAACe,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAIH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,WADL,CADJ;AAKH,CA7CD;;AA+CA,eAAeH,KAAf","sourcesContent":["import React from 'react';\n\nconst input = (props) => {\n    const INPUT_TYPES = [\n        'text',\n        'email',\n        'number',\n        'password'\n    ]\n\n    let formElement = null;\n\n    if(INPUT_TYPES.lastIndexOf(props.config.type) !== -1){\n        formElement = <input \n                        type={props.config.type} \n                        className={['form-control'].join(' ')}\n                        onChange={props.change}\n                        placeholder={props.config.placeholder}/>\n    }\n\n    if(props.config.type === 'select'){\n\n        const options = props.config.options.map((opt) => {\n            let key = Object.keys(opt)[0];\n            let value = opt[key];\n            return <option key={key} value={key} selected={ value===key ? true : false }>{value}</option>\n        })\n\n        formElement = <select \n            className={['form-control'].join(' ')}\n            onChange={props.change}>\n            {options}\n        </select>\n    }\n\n    if(props.config.type === 'textarea'){\n        formElement = <textarea className={['form-control'].join(' ')}\n            onChange={props.change} value={props.value}>\n\n        </textarea>\n    }\n\n    return (\n        <div className=\"form-group\">\n            {formElement}\n        </div>\n    )\n}\n\nexport default input;"]},"metadata":{},"sourceType":"module"}