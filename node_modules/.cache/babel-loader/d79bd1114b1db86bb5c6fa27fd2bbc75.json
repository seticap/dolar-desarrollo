{"ast":null,"code":"var _jsxFileName = \"D:\\\\dolar_react-master\\\\dolar_react-master\\\\src\\\\components\\\\Dashboard\\\\PriceChart\\\\PriceChart.js\";\nimport React, { Component } from 'react';\nimport { HttpNode } from '../../../axiosInstances';\nimport Chart from \"chart.js\";\n\nclass PriceChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chart = null;\n    this.state = {\n      mobile: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: '350px',\n        padding: '0 ' + this.state.mobile ? '0' : '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"PriceChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })));\n  }\n\n  componentDidMount() {\n    if (window.innerWidth <= 600) {\n      this.setState({\n        mobile: true\n      });\n    }\n\n    this.mountChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.period !== this.props.period || prevProps.market !== this.props.market) {\n      this.mountChart();\n    }\n  }\n\n  mountChart() {\n    if (this.chart != null) {\n      this.chart.destroy();\n    }\n\n    let market = this.props.market ? this.props.market : 71; // default 71\n\n    let period = this.props.period ? this.props.period : '5d'; // default 5 days\n\n    HttpNode.post(\"seticap/api/graficos/graficoPrecios\", {\n      mercado: market,\n      moneda: 'USD/COP',\n      periodo: period\n    }).then(response => {\n      const responsedata = response.data.data.data.data; // this is hilarious\n\n      const data = responsedata.datasets.length ? responsedata.datasets[0].data : [];\n      const labels = responsedata.datasets.length ? responsedata.labels : [];\n      let ctx = document.getElementById(\"PriceChart\").getContext(\"2d\");\n      const config = {\n        type: \"bar\",\n        data: {\n          labels: labels,\n          datasets: [{\n            label: \"Cotización USD/COP\",\n            data: data,\n            borderColor: \"#8bc34a\",\n            borderWidth: 4,\n            pointRadius: 0,\n            yAxisID: \"y-axis-1\",\n            backgroundColor: \"rgba(0,0,0,0)\",\n            type: \"line\"\n          }]\n        },\n        options: {\n          responsive: true,\n          animation: false,\n          maintainAspectRatio: false,\n          line: {\n            tension: 0 // disables bezier curves\n\n          },\n          scales: {\n            yAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Precios'\n              },\n              type: \"linear\",\n              ticks: {\n                beginAtZero: false\n              },\n              position: \"left\",\n              id: \"y-axis-1\",\n              gridLines: {\n                display: false\n              }\n            }],\n            xAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Horas'\n              },\n              ticks: {\n                maxRotation: 90,\n                minRotation: 90,\n                maxTicksLimit: 100\n              }\n            }]\n          }\n        }\n      };\n      this.chart = new Chart(ctx, config);\n    });\n  }\n\n}\n\nexport default PriceChart;","map":{"version":3,"sources":["D:\\dolar_react-master\\dolar_react-master\\src\\components\\Dashboard\\PriceChart\\PriceChart.js"],"names":["React","Component","HttpNode","Chart","PriceChart","chart","state","mobile","render","width","height","padding","componentDidMount","window","innerWidth","setState","mountChart","componentDidUpdate","prevProps","period","props","market","destroy","post","mercado","moneda","periodo","then","response","responsedata","data","datasets","length","labels","ctx","document","getElementById","getContext","config","type","label","borderColor","borderWidth","pointRadius","yAxisID","backgroundColor","options","responsive","animation","maintainAspectRatio","line","tension","scales","yAxes","scaleLabel","display","labelString","ticks","beginAtZero","position","id","gridLines","xAxes","maxRotation","minRotation","maxTicksLimit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {HttpNode} from '../../../axiosInstances';\nimport Chart from \"chart.js\";\n\nclass PriceChart extends Component{\n    chart = null;\n    state = {\n      mobile: false\n    }\n    render(){\n        return   (\n            <div className=\"panel-body\">\n                <div style={{ width: \"100%\", height: '350px', padding: '0 ' + this.state.mobile ? '0' : '20px'}}>\n                    <canvas\n                        id=\"PriceChart\"\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n      if(window.innerWidth <= 600){\n        this.setState({mobile: true})\n      }\n        this.mountChart();\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.period !== this.props.period || prevProps.market !== this.props.market){\n            this.mountChart();\n        }\n    }\n\n    mountChart(){\n        if(this.chart != null){\n            this.chart.destroy();\n        }\n        let market = this.props.market ? this.props.market : 71; // default 71\n        let period = this.props.period ? this.props.period : '5d'; // default 5 days\n        HttpNode.post(`seticap/api/graficos/graficoPrecios`, {mercado: market, moneda: 'USD/COP', periodo: period}).then(\n            response => {\n                const responsedata = response.data.data.data.data;  // this is hilarious\n                \n                const data = responsedata.datasets.length ? responsedata.datasets[0].data : []\n                const labels = responsedata.datasets.length ? responsedata.labels : []\n\n                let ctx = document.getElementById(\"PriceChart\").getContext(\"2d\");\n\n                const config = {\n                    type: \"bar\",\n                    data: {\n                      labels: labels,\n                      datasets: [\n                        {\n                          label: \"Cotización USD/COP\",\n                          data: data,\n                          borderColor: \"#8bc34a\",\n                          borderWidth: 4,\n                          pointRadius: 0,\n                          yAxisID: \"y-axis-1\",\n                          backgroundColor: \"rgba(0,0,0,0)\",\n                          type: \"line\"\n                        }\n                      ]\n                    },\n                    options: {\n                      responsive: true,\n                      animation: false,\n                      maintainAspectRatio: false,\n                      line: {\n                        tension: 0 // disables bezier curves\n                      },\n                      scales: {\n                        yAxes: [\n                          {\n                            scaleLabel: {\n                              display: true,\n                              labelString: 'Precios'\n                            },\n                            type: \"linear\",\n                            ticks: {\n                              beginAtZero: false\n                            },\n                            position: \"left\",\n                            id: \"y-axis-1\",\n                            gridLines: {\n                              display: false\n                            }\n                          }],\n                          xAxes: [{\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Horas'\n                            },\n                            ticks: {\n                                maxRotation: 90,\n                                minRotation: 90,\n                                maxTicksLimit: 100\n                            }\n                        }]\n                      }\n                    }\n                  };\n                \n                this.chart = new Chart(ctx, config);\n            }\n        )\n    }\n}\n\nexport default PriceChart;"]},"metadata":{},"sourceType":"module"}