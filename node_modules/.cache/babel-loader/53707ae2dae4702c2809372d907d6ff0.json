{"ast":null,"code":"var _jsxFileName = \"D:\\\\dolar_react-master\\\\dolar_react-master\\\\src\\\\components\\\\Dashboard\\\\BollingerChart\\\\BollingerChart.js\";\nimport React, { Component } from 'react';\nimport { HttpNode } from '../../../axiosInstances';\nimport Chart from \"chart.js\";\n\nclass BollingerChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chart = null;\n    this.state = {\n      mobile: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: '350px',\n        padding: '0 ' + this.state.mobile ? '0' : '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"BollingerChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })));\n  }\n\n  componentDidMount() {\n    if (window.innerWidth <= 600) {\n      this.setState({\n        mobile: true\n      });\n    }\n\n    this.mountChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.period !== this.props.period || prevProps.market !== this.props.market) {\n      this.mountChart();\n    }\n  }\n\n  mountChart() {\n    if (this.chart != null) {\n      this.chart.destroy();\n    }\n\n    let market = this.props.market ? this.props.market : 71; // default 71\n\n    let period = this.props.period ? this.props.period : '5d'; // default 5 days\n\n    let sma = this.state.sma ? this.state.sma : 20; // default 20\n\n    let desv = this.state.desv ? this.state.desv : 2; // default 2\n\n    HttpNode.post(\"seticap/api/graficos/graficoBollinger\", {\n      mercado: market,\n      moneda: 'USD/COP',\n      periodo: period,\n      sma: sma,\n      desv: desv\n    }).then(response => {\n      const responsedata = response.data.data.data.data; // this is hilarious\n\n      const quotedata = responsedata.datasets.length ? responsedata.datasets[0].data : [];\n      const average_low = responsedata.datasets.length > 1 ? responsedata.datasets[1].data : [];\n      const average_hight = responsedata.datasets.length > 2 ? responsedata.datasets[2].data : [];\n      const average_hight_two = responsedata.datasets.length > 2 ? responsedata.datasets[3].data : [];\n      const average_low_label = responsedata.datasets.length > 1 ? responsedata.datasets[1].label : '';\n      const average_hight_label = responsedata.datasets.length > 2 ? responsedata.datasets[2].label : '';\n      const average_hight_label_two = responsedata.datasets.length > 2 ? responsedata.datasets[3].label : '';\n      const labels = responsedata.datasets.length ? responsedata.labels : [];\n      let ctx = document.getElementById(\"BollingerChart\").getContext(\"2d\");\n      const config = {\n        type: \"bar\",\n        data: {\n          labels: labels,\n          datasets: [{\n            label: \"Cotizaci√≥n USD/COP\",\n            data: quotedata,\n            borderColor: \"#8bc34a\",\n            borderWidth: 1,\n            pointRadius: 0,\n            yAxisID: \"y-axis-1\",\n            backgroundColor: \"rgba(0,0,0,0)\",\n            type: \"line\"\n          }, {\n            label: average_low_label,\n            data: average_low,\n            borderColor: \"#0077AC\",\n            borderWidth: 1,\n            pointRadius: 0,\n            yAxisID: \"y-axis-1\",\n            backgroundColor: \"rgba(0,0,0,0)\",\n            type: \"line\"\n          }, {\n            label: average_hight_label,\n            data: average_hight,\n            borderColor: \"#C82B2B\",\n            borderWidth: 1,\n            pointRadius: 0,\n            yAxisID: \"y-axis-1\",\n            backgroundColor: \"rgba(0,0,0,0)\",\n            type: \"line\"\n          }, {\n            label: average_hight_label_two,\n            data: average_hight_two,\n            borderColor: \"#000000\",\n            borderWidth: 1,\n            pointRadius: 0,\n            yAxisID: \"y-axis-1\",\n            backgroundColor: \"rgba(0,0,0,0)\",\n            type: \"line\"\n          }]\n        },\n        options: {\n          responsive: true,\n          animation: false,\n          maintainAspectRatio: false,\n          line: {\n            tension: 0 // disables bezier curves\n\n          },\n          scales: {\n            yAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Precios'\n              },\n              type: \"linear\",\n              ticks: {\n                beginAtZero: false\n              },\n              position: \"left\",\n              id: \"y-axis-1\",\n              gridLines: {\n                display: false\n              }\n            }],\n            xAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Horas'\n              },\n              ticks: {\n                maxRotation: 90,\n                minRotation: 90,\n                maxTicksLimit: 30\n              }\n            }]\n          }\n        }\n      };\n      this.chart = new Chart(ctx, config);\n    });\n  }\n\n}\n\nexport default BollingerChart;","map":{"version":3,"sources":["D:\\dolar_react-master\\dolar_react-master\\src\\components\\Dashboard\\BollingerChart\\BollingerChart.js"],"names":["React","Component","HttpNode","Chart","BollingerChart","chart","state","mobile","render","width","height","padding","componentDidMount","window","innerWidth","setState","mountChart","componentDidUpdate","prevProps","period","props","market","destroy","sma","desv","post","mercado","moneda","periodo","then","response","responsedata","data","quotedata","datasets","length","average_low","average_hight","average_hight_two","average_low_label","label","average_hight_label","average_hight_label_two","labels","ctx","document","getElementById","getContext","config","type","borderColor","borderWidth","pointRadius","yAxisID","backgroundColor","options","responsive","animation","maintainAspectRatio","line","tension","scales","yAxes","scaleLabel","display","labelString","ticks","beginAtZero","position","id","gridLines","xAxes","maxRotation","minRotation","maxTicksLimit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCI,KADkC,GAC1B,IAD0B;AAAA,SAElCC,KAFkC,GAE1B;AACNC,MAAAA,MAAM,EAAE;AADF,KAF0B;AAAA;;AAKlCC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,OAAO,EAAE,OAAO,KAAKL,KAAL,CAAWC,MAAlB,GAA2B,GAA3B,GAAiC;AAA5E,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,EAAE,EAAC,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AASH;;AAEDK,EAAAA,iBAAiB,GAAE;AACjB,QAAGC,MAAM,CAACC,UAAP,IAAqB,GAAxB,EAA4B;AAC1B,WAAKC,QAAL,CAAc;AAACR,QAAAA,MAAM,EAAE;AAAT,OAAd;AACD;;AACC,SAAKS,UAAL;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,QAAGA,SAAS,CAACC,MAAV,KAAqB,KAAKC,KAAL,CAAWD,MAAhC,IAA0CD,SAAS,CAACG,MAAV,KAAqB,KAAKD,KAAL,CAAWC,MAA7E,EAAoF;AAChF,WAAKL,UAAL;AACH;AACJ;;AAEDA,EAAAA,UAAU,GAAE;AACR,QAAG,KAAKX,KAAL,IAAc,IAAjB,EAAsB;AAClB,WAAKA,KAAL,CAAWiB,OAAX;AACH;;AACD,QAAID,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,GAAoB,KAAKD,KAAL,CAAWC,MAA/B,GAAwC,EAArD,CAJQ,CAIiD;;AACzD,QAAIF,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAX,GAAoB,KAAKC,KAAL,CAAWD,MAA/B,GAAwC,IAArD,CALQ,CAKmD;;AAC3D,QAAII,GAAG,GAAG,KAAKjB,KAAL,CAAWiB,GAAX,GAAiB,KAAKjB,KAAL,CAAWiB,GAA5B,GAAkC,EAA5C,CANQ,CAMyC;;AACjD,QAAIC,IAAI,GAAG,KAAKlB,KAAL,CAAWkB,IAAX,GAAkB,KAAKlB,KAAL,CAAWkB,IAA7B,GAAoC,CAA/C,CAPQ,CAO0C;;AAClDtB,IAAAA,QAAQ,CAACuB,IAAT,0CAAuD;AAC/CC,MAAAA,OAAO,EAAEL,MADsC;AAE/CM,MAAAA,MAAM,EAAE,SAFuC;AAG/CC,MAAAA,OAAO,EAAET,MAHsC;AAI/CI,MAAAA,GAAG,EAAEA,GAJ0C;AAK/CC,MAAAA,IAAI,EAAEA;AALyC,KAAvD,EAMOK,IANP,CAOIC,QAAQ,IAAI;AACR,YAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBA,IAAnB,CAAwBA,IAA7C,CADQ,CAC4C;;AAEpD,YAAMC,SAAS,GAAGF,YAAY,CAACG,QAAb,CAAsBC,MAAtB,GAA+BJ,YAAY,CAACG,QAAb,CAAsB,CAAtB,EAAyBF,IAAxD,GAA+D,EAAjF;AACA,YAAMI,WAAW,GAAGL,YAAY,CAACG,QAAb,CAAsBC,MAAtB,GAA+B,CAA/B,GAAmCJ,YAAY,CAACG,QAAb,CAAsB,CAAtB,EAAyBF,IAA5D,GAAmE,EAAvF;AACA,YAAMK,aAAa,GAAGN,YAAY,CAACG,QAAb,CAAsBC,MAAtB,GAA+B,CAA/B,GAAmCJ,YAAY,CAACG,QAAb,CAAsB,CAAtB,EAAyBF,IAA5D,GAAmE,EAAzF;AACA,YAAMM,iBAAiB,GAAGP,YAAY,CAACG,QAAb,CAAsBC,MAAtB,GAA+B,CAA/B,GAAmCJ,YAAY,CAACG,QAAb,CAAsB,CAAtB,EAAyBF,IAA5D,GAAmE,EAA7F;AAEA,YAAMO,iBAAiB,GAAGR,YAAY,CAACG,QAAb,CAAsBC,MAAtB,GAA+B,CAA/B,GAAmCJ,YAAY,CAACG,QAAb,CAAsB,CAAtB,EAAyBM,KAA5D,GAAoE,EAA9F;AACA,YAAMC,mBAAmB,GAAGV,YAAY,CAACG,QAAb,CAAsBC,MAAtB,GAA+B,CAA/B,GAAmCJ,YAAY,CAACG,QAAb,CAAsB,CAAtB,EAAyBM,KAA5D,GAAoE,EAAhG;AACA,YAAME,uBAAuB,GAAGX,YAAY,CAACG,QAAb,CAAsBC,MAAtB,GAA+B,CAA/B,GAAmCJ,YAAY,CAACG,QAAb,CAAsB,CAAtB,EAAyBM,KAA5D,GAAoE,EAApG;AAEA,YAAMG,MAAM,GAAGZ,YAAY,CAACG,QAAb,CAAsBC,MAAtB,GAA+BJ,YAAY,CAACY,MAA5C,GAAqD,EAApE;AAEA,UAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,UAA1C,CAAqD,IAArD,CAAV;AAEA,YAAMC,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAE,KADK;AAEXjB,QAAAA,IAAI,EAAE;AACJW,UAAAA,MAAM,EAAEA,MADJ;AAEJT,UAAAA,QAAQ,EAAE,CACR;AACEM,YAAAA,KAAK,EAAE,oBADT;AAEER,YAAAA,IAAI,EAAEC,SAFR;AAGEiB,YAAAA,WAAW,EAAE,SAHf;AAIEC,YAAAA,WAAW,EAAE,CAJf;AAKEC,YAAAA,WAAW,EAAE,CALf;AAMEC,YAAAA,OAAO,EAAE,UANX;AAOEC,YAAAA,eAAe,EAAE,eAPnB;AAQEL,YAAAA,IAAI,EAAE;AARR,WADQ,EAUN;AACAT,YAAAA,KAAK,EAAED,iBADP;AAEAP,YAAAA,IAAI,EAAEI,WAFN;AAGAc,YAAAA,WAAW,EAAE,SAHb;AAIAC,YAAAA,WAAW,EAAE,CAJb;AAKAC,YAAAA,WAAW,EAAE,CALb;AAMAC,YAAAA,OAAO,EAAE,UANT;AAOAC,YAAAA,eAAe,EAAE,eAPjB;AAQAL,YAAAA,IAAI,EAAE;AARN,WAVM,EAmBN;AACET,YAAAA,KAAK,EAAEC,mBADT;AAEET,YAAAA,IAAI,EAAEK,aAFR;AAGEa,YAAAA,WAAW,EAAE,SAHf;AAIEC,YAAAA,WAAW,EAAE,CAJf;AAKEC,YAAAA,WAAW,EAAE,CALf;AAMEC,YAAAA,OAAO,EAAE,UANX;AAOEC,YAAAA,eAAe,EAAE,eAPnB;AAQEL,YAAAA,IAAI,EAAE;AARR,WAnBM,EA4BN;AACAT,YAAAA,KAAK,EAAEE,uBADP;AAEEV,YAAAA,IAAI,EAAEM,iBAFR;AAGEY,YAAAA,WAAW,EAAE,SAHf;AAIEC,YAAAA,WAAW,EAAE,CAJf;AAKEC,YAAAA,WAAW,EAAE,CALf;AAMEC,YAAAA,OAAO,EAAE,UANX;AAOEC,YAAAA,eAAe,EAAE,eAPnB;AAQEL,YAAAA,IAAI,EAAE;AARR,WA5BM;AAFN,SAFK;AA4CXM,QAAAA,OAAO,EAAE;AACPC,UAAAA,UAAU,EAAE,IADL;AAEPC,UAAAA,SAAS,EAAE,KAFJ;AAGPC,UAAAA,mBAAmB,EAAE,KAHd;AAIPC,UAAAA,IAAI,EAAE;AACJC,YAAAA,OAAO,EAAE,CADL,CACO;;AADP,WAJC;AAOPC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,CACL;AACEC,cAAAA,UAAU,EAAE;AACVC,gBAAAA,OAAO,EAAE,IADC;AAEVC,gBAAAA,WAAW,EAAE;AAFH,eADd;AAKEhB,cAAAA,IAAI,EAAE,QALR;AAMEiB,cAAAA,KAAK,EAAE;AACLC,gBAAAA,WAAW,EAAE;AADR,eANT;AASEC,cAAAA,QAAQ,EAAE,MATZ;AAUEC,cAAAA,EAAE,EAAE,UAVN;AAWEC,cAAAA,SAAS,EAAE;AACTN,gBAAAA,OAAO,EAAE;AADA;AAXb,aADK,CADD;AAiBJO,YAAAA,KAAK,EAAE,CAAC;AACNR,cAAAA,UAAU,EAAE;AACRC,gBAAAA,OAAO,EAAE,IADD;AAERC,gBAAAA,WAAW,EAAE;AAFL,eADN;AAKNC,cAAAA,KAAK,EAAE;AACHM,gBAAAA,WAAW,EAAE,EADV;AAEHC,gBAAAA,WAAW,EAAE,EAFV;AAGHC,gBAAAA,aAAa,EAAE;AAHZ;AALD,aAAD;AAjBH;AAPD;AA5CE,OAAf;AAmFA,WAAKrE,KAAL,GAAa,IAAIF,KAAJ,CAAUyC,GAAV,EAAeI,MAAf,CAAb;AACH,KA3GL;AA6GH;;AAnJiC;;AAsJtC,eAAe5C,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport {HttpNode} from '../../../axiosInstances';\nimport Chart from \"chart.js\";\n\nclass BollingerChart extends Component{\n    chart = null;\n    state = {\n      mobile: false\n    }\n    render(){\n        return   (\n            <div className=\"panel-body\">\n                <div style={{ width: \"100%\", height: '350px', padding: '0 ' + this.state.mobile ? '0' : '20px' }}>\n                    <canvas\n                        id=\"BollingerChart\"\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n      if(window.innerWidth <= 600){\n        this.setState({mobile: true})\n      }\n        this.mountChart();\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.period !== this.props.period || prevProps.market !== this.props.market){\n            this.mountChart();\n        }\n    }\n\n    mountChart(){\n        if(this.chart != null){\n            this.chart.destroy();\n        }\n        let market = this.props.market ? this.props.market : 71; // default 71\n        let period = this.props.period ? this.props.period : '5d'; // default 5 days\n        let sma = this.state.sma ? this.state.sma : 20;  // default 20\n        let desv = this.state.desv ? this.state.desv : 2; // default 2\n        HttpNode.post(`seticap/api/graficos/graficoBollinger`, {\n                mercado: market, \n                moneda: 'USD/COP', \n                periodo: period,\n                sma: sma,\n                desv: desv\n            }).then(\n            response => {\n                const responsedata = response.data.data.data.data;  // this is hilarious\n                \n                const quotedata = responsedata.datasets.length ? responsedata.datasets[0].data : []\n                const average_low = responsedata.datasets.length > 1 ? responsedata.datasets[1].data : []\n                const average_hight = responsedata.datasets.length > 2 ? responsedata.datasets[2].data : []\n                const average_hight_two = responsedata.datasets.length > 2 ? responsedata.datasets[3].data : []\n                \n                const average_low_label = responsedata.datasets.length > 1 ? responsedata.datasets[1].label : '';\n                const average_hight_label = responsedata.datasets.length > 2 ? responsedata.datasets[2].label : '';\n                const average_hight_label_two = responsedata.datasets.length > 2 ? responsedata.datasets[3].label : '';\n\n                const labels = responsedata.datasets.length ? responsedata.labels : []\n\n                let ctx = document.getElementById(\"BollingerChart\").getContext(\"2d\");\n\n                const config = {\n                    type: \"bar\",\n                    data: {\n                      labels: labels,\n                      datasets: [\n                        {\n                          label: \"Cotizaci√≥n USD/COP\",\n                          data: quotedata,\n                          borderColor: \"#8bc34a\",\n                          borderWidth: 1,\n                          pointRadius: 0,\n                          yAxisID: \"y-axis-1\",\n                          backgroundColor: \"rgba(0,0,0,0)\",\n                          type: \"line\"\n                        },{\n                          label: average_low_label,\n                          data: average_low,\n                          borderColor: \"#0077AC\",\n                          borderWidth: 1,\n                          pointRadius: 0,\n                          yAxisID: \"y-axis-1\",\n                          backgroundColor: \"rgba(0,0,0,0)\",\n                          type: \"line\"\n                        },{\n                            label: average_hight_label,\n                            data: average_hight,\n                            borderColor: \"#C82B2B\",\n                            borderWidth: 1,\n                            pointRadius: 0,\n                            yAxisID: \"y-axis-1\",\n                            backgroundColor: \"rgba(0,0,0,0)\",\n                            type: \"line\"\n                        },{\n                          label: average_hight_label_two,\n                            data: average_hight_two,\n                            borderColor: \"#000000\",\n                            borderWidth: 1,\n                            pointRadius: 0,\n                            yAxisID: \"y-axis-1\",\n                            backgroundColor: \"rgba(0,0,0,0)\",\n                            type: \"line\"\n                        }\n                      ]\n                    },\n                    options: {\n                      responsive: true,\n                      animation: false,\n                      maintainAspectRatio: false,\n                      line: {\n                        tension: 0 // disables bezier curves\n                      },\n                      scales: {\n                        yAxes: [\n                          {\n                            scaleLabel: {\n                              display: true,\n                              labelString: 'Precios'\n                            },\n                            type: \"linear\",\n                            ticks: {\n                              beginAtZero: false\n                            },\n                            position: \"left\",\n                            id: \"y-axis-1\",\n                            gridLines: {\n                              display: false\n                            }\n                          }],\n                          xAxes: [{\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Horas'\n                            },\n                            ticks: {\n                                maxRotation: 90,\n                                minRotation: 90,\n                                maxTicksLimit: 30\n                            }\n                        }]\n                      }\n                    }\n                  };\n                \n                this.chart = new Chart(ctx, config);\n            }\n        )\n    }\n}\n\nexport default BollingerChart;"]},"metadata":{},"sourceType":"module"}