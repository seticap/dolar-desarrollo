{"ast":null,"code":"var _jsxFileName = \"D:\\\\dolar_react-master\\\\dolar_react-master2 - scripts\\\\src\\\\containers\\\\shared\\\\DolarSpot\\\\DolarSpot.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./DolarSpot.css\";\nimport Chart from \"chart.js\";\nimport { HttpNode } from \"../../../axiosInstances\";\nimport { connect } from 'react-redux';\n\nclass DolarSpotChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      labels: [],\n      dolarValueData: [],\n      mountUSD: [],\n      loaded: false,\n      mobile: false\n    };\n    this.chart = null;\n  }\n\n  getChartData() {\n    const dataDelay = this.props.dataDelay ? this.props.dataDelay : '15';\n    const today = new Date();\n    const rt = parseInt(this.props.dataDelay);\n    const url = parseInt(this.props.dataDelay) === 0 ? 'seticap/api/graficos/graficoMonedaRT/' : 'seticap/api/graficos/graficoMoneda/';\n    HttpNode.post(url, {\n      \"fecha\": \"\".concat(today.getFullYear(), \"-\").concat((today.getMonth() + 1).toString().padStart(2, '0'), \"-\").concat(today.getDate().toString().padStart(2, '0')),\n      \"moneda\": 1,\n      \"delay\": dataDelay,\n      \"market\": this.props ? this.props.market : 71\n    }).then(response => {\n      if (this.chart !== null) {\n        this.chart.destroy();\n      }\n\n      let data = null;\n\n      if (rt === 0) {\n        data = response.data.result[0].datos_grafico_moneda_mercado_rt;\n      } else {\n        data = response.data.result[0].datos_grafico_moneda_mercado;\n      }\n\n      data = data.replace(/'/g, '\"').replace(/\\d{2}:\\d{2}(:\\d{2})*/gi, function (x) {\n        return '\"' + x + '\"';\n      }).replace(/data:/g, '\"data\":').replace(/label:/g, '\"label\":').replace(/type:/g, '\"type\":').replace(/labels:/g, '\"labels\":').replace(/datasets:/g, '\"datasets\":');\n      data = JSON.parse(\"{\" + data + \"}\").data;\n      let ctx = document.getElementById(\"DolarSpotChart\");\n\n      if (ctx !== null) {\n        ctx = ctx.getContext(\"2d\");\n        const config = {\n          type: \"bar\",\n          data: {\n            labels: data.labels,\n            datasets: [{\n              label: \"Precios del cierre\",\n              data: data.datasets[0].data,\n              borderColor: \"#8bc34a\",\n              borderWidth: 4,\n              pointRadius: 0,\n              yAxisID: \"y-axis-2\",\n              backgroundColor: \"rgba(0,0,0,0)\",\n              type: \"line\"\n            }, {\n              label: \"Monto en miles (USD)\",\n              data: data.datasets[1].data,\n              backgroundColor: \"red\",\n              type: \"bar\",\n              yAxisID: \"y-axis-1\"\n            }]\n          },\n          options: {\n            responsive: true,\n            animation: false,\n            maintainAspectRatio: false,\n            line: {\n              tension: 0 // disables bezier curves\n\n            },\n            scales: {\n              yAxes: [{\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Montos'\n                },\n                type: \"linear\",\n                ticks: {\n                  beginAtZero: false\n                },\n                position: \"left\",\n                id: \"y-axis-1\",\n                gridLines: {\n                  display: false\n                }\n              }, {\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Precios'\n                },\n                type: \"linear\",\n                ticks: {\n                  beginAtZero: false\n                },\n                position: \"right\",\n                id: \"y-axis-2\",\n                gridLines: {\n                  display: false\n                }\n              }],\n              xAxes: [{\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Horas'\n                },\n                ticks: {\n                  maxRotation: 90,\n                  minRotation: 90\n                }\n              }]\n            }\n          }\n        };\n        this.chart = new Chart(ctx, config);\n      }\n\n      this.setState({\n        loaded: true\n      });\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"DidMount\");\n\n    if (window.innerWidth <= 600) {\n      this.setState({\n        mobile: true\n      });\n    }\n\n    this.getChartData();\n\n    if (this.props.delay !== undefined) {\n      let delay = this.props.delay === 0 ? 1 : this.props.delay;\n      this.interval = setInterval(this.getChartData.bind(this), delay * 1000 * 15);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.state.loaded && this.state.labels.length && this.state.dolarValueData.length || this.props.market != prevProps.market) {\n      console.log('didUpdate');\n      this.setState({\n        loaded: false\n      });\n      this.getChartData();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.chart !== null) {\n      this.chart.destroy();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: [\"panel\", classes.DolarSpotPanel].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, !this.state.loaded ? React.createElement(\"div\", {\n      className: classes.Cover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.LDSFacebook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), \" \") : null, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, this.props.market == 76 ? 'Next day' : 'DÃ³lar Spot')), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        padding: '0 ' + this.state.mobile ? '0' : '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      className: classes.DolarSpotCanvas,\n      id: \"DolarSpotChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })));\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(DolarSpotChart);","map":{"version":3,"sources":["D:\\dolar_react-master\\dolar_react-master2 - scripts\\src\\containers\\shared\\DolarSpot\\DolarSpot.js"],"names":["React","Component","classes","Chart","HttpNode","connect","DolarSpotChart","state","labels","dolarValueData","mountUSD","loaded","mobile","chart","getChartData","dataDelay","props","today","Date","rt","parseInt","url","post","getFullYear","getMonth","toString","padStart","getDate","market","then","response","destroy","data","result","datos_grafico_moneda_mercado_rt","datos_grafico_moneda_mercado","replace","x","JSON","parse","ctx","document","getElementById","getContext","config","type","datasets","label","borderColor","borderWidth","pointRadius","yAxisID","backgroundColor","options","responsive","animation","maintainAspectRatio","line","tension","scales","yAxes","scaleLabel","display","labelString","ticks","beginAtZero","position","id","gridLines","xAxes","maxRotation","minRotation","setState","componentDidMount","console","log","window","innerWidth","delay","undefined","interval","setInterval","bind","componentDidUpdate","prevProps","length","componentWillUnmount","render","DolarSpotPanel","join","Cover","LDSFacebook","width","padding","DolarSpotCanvas","clearInterval","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from \"./DolarSpot.css\";\nimport Chart from \"chart.js\";\nimport { HttpNode } from \"../../../axiosInstances\";\nimport {connect} from 'react-redux';\nclass DolarSpotChart extends Component {\n  state = {\n    labels: [],\n    dolarValueData: [],\n    mountUSD: [],\n    loaded: false,\n    mobile: false\n  };\n  chart = null;\n  \n\n  getChartData() {\n    \n    const dataDelay = this.props.dataDelay ? this.props.dataDelay: '15';\n    const today = new Date();\n    const rt = parseInt(this.props.dataDelay);\n    const url = parseInt(this.props.dataDelay) === 0 ? 'seticap/api/graficos/graficoMonedaRT/' : 'seticap/api/graficos/graficoMoneda/';\n    HttpNode.post(url, {\n      \"fecha\": `${today.getFullYear()}-${(today.getMonth() + 1).toString().padStart(2, '0')}-${(today.getDate()).toString().padStart(2, '0')}`,\n      \"moneda\": 1,\n      \"delay\": dataDelay,\n      \"market\": this.props ? this.props.market : 71\n    }).then(\n      response => {\n        if(this.chart !== null){\n          this.chart.destroy()\n        }\n        let data = null;\n        if(rt === 0){\n          data = response.data.result[0].datos_grafico_moneda_mercado_rt;\n        }else{\n          data = response.data.result[0].datos_grafico_moneda_mercado;\n        }\n        \n        data = data\n                .replace(/'/g, '\"')\n                .replace(/\\d{2}:\\d{2}(:\\d{2})*/gi, function(x){ return '\"'+x+'\"' })\n                .replace(/data:/g, '\"data\":')\n                .replace(/label:/g, '\"label\":')\n                .replace(/type:/g, '\"type\":')\n                .replace(/labels:/g, '\"labels\":')\n                .replace(/datasets:/g, '\"datasets\":')\n        \n        data = JSON.parse(\"{\" + data + \"}\").data;\n\n        let ctx = document.getElementById(\"DolarSpotChart\");\n        if(ctx !== null){\n          ctx = ctx.getContext(\"2d\");\n          const config = {\n            type: \"bar\",\n            data: {\n              labels: data.labels,\n              datasets: [\n                {\n                  label: \"Precios del cierre\",\n                  data: data.datasets[0].data,\n                  borderColor: \"#8bc34a\",\n                  borderWidth: 4,\n                  pointRadius: 0,\n                  yAxisID: \"y-axis-2\",\n                  backgroundColor: \"rgba(0,0,0,0)\",\n                  type: \"line\"\n                },{\n                  label: \"Monto en miles (USD)\",\n                  data: data.datasets[1].data,\n                  backgroundColor: \"red\",\n                  type: \"bar\",\n                  yAxisID: \"y-axis-1\",\n                }\n              ]\n            },\n            options: {\n              responsive: true,\n              animation: false,\n              maintainAspectRatio: false,\n              line: {\n                tension: 0 // disables bezier curves\n              },\n              scales: {\n                yAxes: [\n                  {\n                    scaleLabel: {\n                      display: true,\n                      labelString: 'Montos'\n                    },\n                    type: \"linear\",\n                    ticks: {\n                      beginAtZero: false\n                    },\n                    position: \"left\",\n                    id: \"y-axis-1\",\n                    gridLines: {\n                      display: false\n                    }\n                  }, {\n                    scaleLabel: {\n                      display: true,\n                      labelString: 'Precios'\n                    },\n                    type: \"linear\",\n                    ticks: {\n                      beginAtZero: false\n                    },\n                    position: \"right\",\n                    id: \"y-axis-2\",\n                    gridLines: {\n                      display: false\n                    }\n                  }],\n                  xAxes: [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: 'Horas'\n                    },\n                    ticks: {\n                        maxRotation: 90,\n                        minRotation: 90\n                    }\n                }]\n              }\n            }\n          };\n          this.chart = new Chart(ctx, config);\n        }\n        this.setState({\n          loaded: true\n        })\n      }\n    )\n  }\n\n  componentDidMount() {\n    console.log(\"DidMount\");\n    if(window.innerWidth <= 600){\n      this.setState({mobile: true})\n    }\n    this.getChartData();\n    if (this.props.delay !== undefined) {\n      let delay = this.props.delay === 0 ? 1 : this.props.delay;\n      \n      this.interval = setInterval(this.getChartData.bind(this), delay * 1000 * 15)\n    }\n  }\n\n\n  componentDidUpdate(prevProps) {\n    \n    if (\n      (!this.state.loaded &&\n      this.state.labels.length &&\n      this.state.dolarValueData.length || (this.props.market != prevProps.market))\n    ) {\n      console.log('didUpdate')\n      this.setState({loaded: false})\n      \n      this.getChartData();\n    }\n  }\n\n  componentWillUnmount(){\n    if(this.chart !== null){\n      this.chart.destroy()\n    }\n  }\n\n  render() {\n    return (\n      <div className={[\"panel\", classes.DolarSpotPanel].join(' ')}>\n        { !this.state.loaded ? \n          <div className={classes.Cover}><div className={classes.LDSFacebook}><div></div><div></div><div></div></div> </div>\n          : null}\n        <div className=\"panel-heading\">\n          <h3 className=\"panel-title\">{this.props.market == 76 ? 'Next day' : 'DÃ³lar Spot'}</h3>\n        </div>\n        <div style={{ width: \"100%\", padding: '0 ' + this.state.mobile ? '0' : '20px' }}>\n          <canvas\n            className={classes.DolarSpotCanvas}\n            id=\"DolarSpotChart\"\n          />\n        </div>\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default connect(mapStateToProps)(DolarSpotChart);\n"]},"metadata":{},"sourceType":"module"}