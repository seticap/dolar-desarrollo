{"ast":null,"code":"var _jsxFileName = \"D:\\\\dolar_react-master\\\\dolar_react-master2 - scripts\\\\src\\\\components\\\\Dashboard\\\\CandleStick\\\\CandleStick.js\";\nimport React, { Component } from 'react';\nimport Chart from 'chart.js';\nimport { HttpNode } from '../../../axiosInstances';\n\nrequire('../../../utils/FinantialChart');\n\nclass CandleStick extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chart = null;\n    this.state = {\n      mobile: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        height: '350px',\n        padding: '0 ' + this.state.mobile ? '0' : '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"CandleStick\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })));\n  }\n\n  componentDidMount() {\n    if (window.innerWidth <= 600) {\n      this.setState({\n        mobile: true\n      });\n    }\n\n    this.mountChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.period !== this.props.period || prevProps.market !== this.props.market) {\n      this.mountChart();\n    }\n  }\n\n  mountChart() {\n    if (this.chart != null) {\n      this.chart.destroy();\n    }\n\n    let market = this.props.market ? this.props.market : 71; // default 71\n\n    let period = this.props.period ? this.props.period : '5d'; // default 5 days\n\n    HttpNode.post(\"seticap/api/graficos/graficoVelas\", {\n      mercado: market,\n      moneda: 'USD/COP',\n      periodo: period,\n      bandera: window.innerWidth <= 600 ? 1 : 0\n    }).then(response => {\n      const responsedata = response.data.data.data.data;\n      let data = responsedata.datasets[0].data.map((elem, index) => {\n        elem.t = new Date(responsedata.labels[index]).valueOf();\n        return elem;\n      });\n      let ctx = document.getElementById(\"CandleStick\").getContext(\"2d\");\n      this.chart = new Chart(ctx, {\n        type: 'candlestick',\n        data: {\n          datasets: [{\n            label: 'Convenciones: [Máximo - Mínimo , Apertura - Cierre]',\n            data: data\n          }]\n        },\n        options: {\n          responsive: true,\n          animation: false,\n          maintainAspectRatio: false,\n          scales: {\n            xAxes: [{\n              ticks: {\n                maxRotation: 90,\n                minRotation: 90,\n                maxTicksLimit: 30\n              }\n            }]\n          }\n        }\n      });\n    });\n  }\n\n}\n\nexport default CandleStick;","map":{"version":3,"sources":["D:\\dolar_react-master\\dolar_react-master2 - scripts\\src\\components\\Dashboard\\CandleStick\\CandleStick.js"],"names":["React","Component","Chart","HttpNode","require","CandleStick","chart","state","mobile","render","width","height","padding","componentDidMount","window","innerWidth","setState","mountChart","componentDidUpdate","prevProps","period","props","market","destroy","post","mercado","moneda","periodo","bandera","then","response","responsedata","data","datasets","map","elem","index","t","Date","labels","valueOf","ctx","document","getElementById","getContext","type","label","options","responsive","animation","maintainAspectRatio","scales","xAxes","ticks","maxRotation","minRotation","maxTicksLimit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Chart from 'chart.js';\nimport {HttpNode} from '../../../axiosInstances';\nrequire('../../../utils/FinantialChart');\n\nclass CandleStick extends Component{\n    chart = null;\n    state = {\n        mobile: false\n    }\n    render(){\n        return(\n            <div className=\"panel-body\">\n                <div style={{ width: \"100%\", height: '350px', padding: '0 ' + this.state.mobile ? '0' : '20px' }}>\n                    <canvas\n                        id=\"CandleStick\"\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        if(window.innerWidth <= 600){\n            this.setState({mobile: true})\n        }\n        this.mountChart();\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.period !== this.props.period || prevProps.market !== this.props.market){\n            this.mountChart();\n        }\n    }\n\n    mountChart(){\n        if(this.chart != null){\n            this.chart.destroy()\n        }\n\n        let market = this.props.market ? this.props.market : 71; // default 71\n        let period = this.props.period ? this.props.period : '5d'; // default 5 days\n        HttpNode.post(`seticap/api/graficos/graficoVelas`, {\n            mercado: market, \n            moneda: 'USD/COP', \n            periodo: period,\n            bandera: window.innerWidth <= 600 ? 1 : 0\n        }).then(\n            response => {\n                const responsedata = response.data.data.data.data;\n                let data = responsedata.datasets[0].data.map((elem, index) => {\n                    elem.t = new Date(responsedata.labels[index]).valueOf();\n                    return elem\n                })\n                \n                let ctx = document.getElementById(\"CandleStick\").getContext(\"2d\");\n                this.chart = new Chart(ctx, {\n                    type: 'candlestick',\n                    data: {\n                        datasets: [{\n                            label: 'Convenciones: [Máximo - Mínimo , Apertura - Cierre]',\n                            data: data\n                        }],\n                    },\n                    options: {\n                        responsive: true,\n                        animation: false,\n                        maintainAspectRatio: false,\n                        scales: {\n                            xAxes: [{\n                              ticks: {\n                                  maxRotation: 90,\n                                  minRotation: 90,\n                                  maxTicksLimit: 30\n                              }\n                          }]\n                        }\n                      }\n                });\n            }\n        )\n    }\n}\n\nexport default CandleStick;"]},"metadata":{},"sourceType":"module"}